This is sqldf.info, produced by makeinfo version 6.8 from sqldf.texi.

     Copyright © 2019-2022 Steve Nunez

     Permission is granted to make and distribute verbatim copies of
     this manual provided the copyright notice and this permission
     notice are preserved on all copies.

     Permission is granted to copy and distribute modified versions of
     this manual under the conditions for verbatim copying, provided
     also that the section entitled “Copying” is included exactly as in
     the original.

     Permission is granted to copy and distribute translations of this
     manual into another language, under the above conditions for
     modified versions, except that this permission notice may be
     translated as well.
INFO-DIR-SECTION Lisp-Stat
START-INFO-DIR-ENTRY
* SQL Data Frames Reference Manual: (sqldf). The SQL Data Frames Reference Manual.
END-INFO-DIR-ENTRY


File: sqldf.info,  Node: Top,  Next: Copying,  Prev: (dir),  Up: (dir)

The SQL Data Frames Reference Manual
************************************

This is the SQL Data Frames Reference Manual, version 1.0.0, generated
automatically by Declt version 4.0b2.

* Menu:

* Copying:: The Microsoft Public License
* Systems:: The systems documentation
* Files:: The files documentation
* Packages:: The packages documentation
* Definitions:: The symbols documentation
* Indexes:: Concepts, functions, variables and data types

     Copyright © 2019-2022 Steve Nunez

     Permission is granted to make and distribute verbatim copies of
     this manual provided the copyright notice and this permission
     notice are preserved on all copies.

     Permission is granted to copy and distribute modified versions of
     this manual under the conditions for verbatim copying, provided
     also that the section entitled “Copying” is included exactly as in
     the original.

     Permission is granted to copy and distribute translations of this
     manual into another language, under the above conditions for
     modified versions, except that this permission notice may be
     translated as well.


File: sqldf.info,  Node: Copying,  Next: Systems,  Prev: Top,  Up: Top

Copying
*******

     This program is distributed under the terms of the Microsoft Public
     License.


File: sqldf.info,  Node: Systems,  Next: Files,  Prev: Copying,  Up: Top

1 Systems
*********

The main system appears first, followed by any subsystem dependency.

* Menu:

* The sqldf system::


File: sqldf.info,  Node: The sqldf system,  Prev: Systems,  Up: Systems

1.1 sqldf
=========

A wrapper for SQLite allowing querying of Data Frames
*Long Name*
     SQL queries for Data Frames
*Author*
     Steve Nunez <<steve@symbolics.tech>>
*Home Page*
     <http://lisp-stat.dev/docs/manuals/sqldf>
*Source Control*
     (GIT git://github.com/Lisp-Stat/sqldf)
*Bug Tracker*
     <https://github.com/Lisp-Stat/sqldf/issues>
*License*
     MS-PL
*Long Description*
     SQLDF is a library for querying data frames using SQL, optimised
     for convenience over memory consumption.  It uses an in-memory data
     base for transparent queries.
*Version*
     1.0.0
*Dependencies*
        • sqlite (system).
        • data-frame (system).
        • select (system).
*Source*
     *note sqldf.asd: ❨2❩.
*Child Components*
        • *note pkgdcl.lisp: ❨3❩. (file).
        • *note utils.lisp: ❨4❩. (file).
        • *note sqldf.lisp: ❨5❩. (file).


File: sqldf.info,  Node: Files,  Next: Packages,  Prev: Systems,  Up: Top

2 Files
*******

Files are sorted by type and then listed depth-first from the systems
components trees.

* Menu:

* Lisp files::


File: sqldf.info,  Node: Lisp files,  Prev: Files,  Up: Files

2.1 Lisp
========

* Menu:

* The sqldf/sqldf․asd file::
* The sqldf/pkgdcl․lisp file::
* The sqldf/utils․lisp file::
* The sqldf/sqldf․lisp file::


File: sqldf.info,  Node: The sqldf/sqldf․asd file,  Next: The sqldf/pkgdcl․lisp file,  Prev: Lisp files,  Up: Lisp files

2.1.1 sqldf/sqldf.asd
---------------------

*Source*
     *note sqldf.asd: ❨2❩.
*Parent Component*
     *note sqldf: ❨1❩. (system).
*ASDF Systems*
     *note sqldf: ❨1❩.


File: sqldf.info,  Node: The sqldf/pkgdcl․lisp file,  Next: The sqldf/utils․lisp file,  Prev: The sqldf/sqldf․asd file,  Up: Lisp files

2.1.2 sqldf/pkgdcl.lisp
-----------------------

*Source*
     *note sqldf.asd: ❨2❩.
*Parent Component*
     *note sqldf: ❨1❩. (system).
*Packages*
     *note sqldf: ❨6❩.


File: sqldf.info,  Node: The sqldf/utils․lisp file,  Next: The sqldf/sqldf․lisp file,  Prev: The sqldf/pkgdcl․lisp file,  Up: Lisp files

2.1.3 sqldf/utils.lisp
----------------------

*Dependency*
     *note pkgdcl.lisp: ❨3❩. (file).
*Source*
     *note sqldf.asd: ❨2❩.
*Parent Component*
     *note sqldf: ❨1❩. (system).
*Internals*
        • *note *downcase-symbols*: ❨15❩. (special variable).
        • *note *escape-sql-names-p*: ❨18❩. (special variable).
        • *note *sqlite-reserved-words*: ❨17❩. (special variable).
        • *note execute-to-column: ❨13❩. (function).
        • *note from-sql-name: ❨12❩. (function).
        • *note sqlite-column-type: ❨16❩. (function).
        • *note statement-column-type: ❨10❩. (function).
        • *note to-sql-name: ❨11❩. (function).


File: sqldf.info,  Node: The sqldf/sqldf․lisp file,  Prev: The sqldf/utils․lisp file,  Up: Lisp files

2.1.4 sqldf/sqldf.lisp
----------------------

*Dependency*
     *note utils.lisp: ❨4❩. (file).
*Source*
     *note sqldf.asd: ❨2❩.
*Parent Component*
     *note sqldf: ❨1❩. (system).
*Public Interface*
        • *note read-table: ❨7❩. (function).
        • *note sqldf: ❨8❩. (function).
        • *note write-table: ❨9❩. (function).
*Internals*
     *note create-df-table: ❨14❩. (function).


File: sqldf.info,  Node: Packages,  Next: Definitions,  Prev: Files,  Up: Top

3 Packages
**********

Packages are listed by definition order.

* Menu:

* The sqldf package::


File: sqldf.info,  Node: The sqldf package,  Prev: Packages,  Up: Packages

3.1 sqldf
=========

SQLDF is a facility for querying data frames with SQL
*Source*
     *note pkgdcl.lisp: ❨3❩.
*Use List*
     common-lisp.
*Public Interface*
        • *note read-table: ❨7❩. (function).
        • *note sqldf: ❨8❩. (function).
        • *note write-table: ❨9❩. (function).
*Internals*
        • *note *downcase-symbols*: ❨15❩. (special variable).
        • *note *escape-sql-names-p*: ❨18❩. (special variable).
        • *note *sqlite-reserved-words*: ❨17❩. (special variable).
        • *note create-df-table: ❨14❩. (function).
        • *note execute-to-column: ❨13❩. (function).
        • *note from-sql-name: ❨12❩. (function).
        • *note sqlite-column-type: ❨16❩. (function).
        • *note statement-column-type: ❨10❩. (function).
        • *note to-sql-name: ❨11❩. (function).


File: sqldf.info,  Node: Definitions,  Next: Indexes,  Prev: Packages,  Up: Top

4 Definitions
*************

Definitions are sorted by export status, category, package, and then by
lexicographic order.

* Menu:

* Public Interface::
* Internals::


File: sqldf.info,  Node: Public Interface,  Next: Internals,  Prev: Definitions,  Up: Definitions

4.1 Public Interface
====================

* Menu:

* Public ordinary functions::


File: sqldf.info,  Node: Public ordinary functions,  Prev: Public Interface,  Up: Public Interface

4.1.1 Ordinary functions
------------------------

 -- Function: read-table (db table)
     Read TABLE and return a data frame with the contents.  Keys are
     interned in a package with the same name as TABLE.
     *Package*
          *note sqldf: ❨6❩.
     *Source*
          *note sqldf.lisp: ❨5❩.
 -- Function: sqldf (sql)
     Execute SQL (a string) on a data frame and return a new data frame
     with the results.
     The data frame is identified by the word following FROM (case
     insensitive) in the SQL string.  An in-memory SQLite database is
     creaetd, the contents of the data frame loaded, the query performed
     and a new DATA-FRAME returned with the results and the database
     deleted.  In most cases, using this library is faster, from a
     developers time perspective, than writing the code to perform the
     same query.  SQLDF has been tested with data frames of 350K rows
     with no slow-down noted.  The R documentation for their version of
     SQLDF suggests that it could be faster than Lisp native queries.
     Note that the SQL query must use SQL style names for columns and
     not the Lisp versions, e.g.  flight-time becomes flight_time.
     *Package*
          *note sqldf: ❨6❩.
     *Source*
          *note sqldf.lisp: ❨5❩.
 -- Function: write-table (db table df)
     Write data-frame DF to TABLE on connection DB. :na symbols are
     converted to "NA" strings in the database.
     *Package*
          *note sqldf: ❨6❩.
     *Source*
          *note sqldf.lisp: ❨5❩.


File: sqldf.info,  Node: Internals,  Prev: Public Interface,  Up: Definitions

4.2 Internals
=============

* Menu:

* Private special variables::
* Private ordinary functions::


File: sqldf.info,  Node: Private special variables,  Next: Private ordinary functions,  Prev: Internals,  Up: Internals

4.2.1 Special variables
-----------------------

 -- Special Variable: *downcase-symbols*
     *Package*
          *note sqldf: ❨6❩.
     *Source*
          *note utils.lisp: ❨4❩.
 -- Special Variable: *escape-sql-names-p*
     *Package*
          *note sqldf: ❨6❩.
     *Source*
          *note utils.lisp: ❨4❩.
 -- Special Variable: *sqlite-reserved-words*
     *Package*
          *note sqldf: ❨6❩.
     *Source*
          *note utils.lisp: ❨4❩.


File: sqldf.info,  Node: Private ordinary functions,  Prev: Private special variables,  Up: Internals

4.2.2 Ordinary functions
------------------------

 -- Function: create-df-table (db table df)
     Create a database table of NAME in DB according to the schema of
     DF. This function is to create a table for DF prior to loading.
     Lisp style symbol names are converted to SQL compatible names.
     *Package*
          *note sqldf: ❨6❩.
     *Source*
          *note sqldf.lisp: ❨5❩.
 -- Function: execute-to-column (db sql &rest parameters)
     *Package*
          *note sqldf: ❨6❩.
     *Source*
          *note utils.lisp: ❨4❩.
 -- Function: from-sql-name (str)
     Convert a string to a symbol, upcasing and replacing underscores
     with hyphens.
     *Package*
          *note sqldf: ❨6❩.
     *Source*
          *note utils.lisp: ❨4❩.
 -- Function: sqlite-column-type (sequence)
     Return a format string for the most general type found in sequence
     Use this for sequences of type T to determine how to declare the
     column to SQLite.
     *Package*
          *note sqldf: ❨6❩.
     *Source*
          *note utils.lisp: ❨4❩.
 -- Function: statement-column-type (stmt column-number)
     Return the type string of a column of a query statement
     *Package*
          *note sqldf: ❨6❩.
     *Source*
          *note utils.lisp: ❨4❩.
 -- Function: to-sql-name ()
     Convert a symbol or string into a name that can be a sql table,
     column, or operation name.  Add quotes when escape-p is true, or
     escape-p is :auto and the name contains reserved words.  Quoted or
     delimited identifiers can be used by passing :literal as the value
     of escape-p.  If escape-p is :literal, and the name is a string
     then the string is still escaped but the symbol or string is not
     downcased, regardless of the setting for *downcase-symbols* and the
     hyphen and forward slash characters are not replaced with
     underscores.  Ignore-reserved-words is only used internally for
     column names which are allowed to be reserved words, but it is not
     recommended.
     *Package*
          *note sqldf: ❨6❩.
     *Source*
          *note utils.lisp: ❨4❩.


File: sqldf.info,  Node: Indexes,  Prev: Definitions,  Up: Top

Appendix A Indexes
******************

* Menu:

* Concept index::
* Function index::
* Variable index::
* Data type index::


File: sqldf.info,  Node: Concept index,  Next: Function index,  Prev: Indexes,  Up: Indexes

A.1 Concepts
============


File: sqldf.info,  Node: Function index,  Next: Variable index,  Prev: Concept index,  Up: Indexes

A.2 Functions
=============

 [index ]
* Menu:

* create-df-table:                       Private ordinary functions.
                                                               (line  6)
* execute-to-column:                     Private ordinary functions.
                                                               (line 14)
* from-sql-name:                         Private ordinary functions.
                                                               (line 19)
* Function, create-df-table:             Private ordinary functions.
                                                               (line  7)
* Function, execute-to-column:           Private ordinary functions.
                                                               (line 15)
* Function, from-sql-name:               Private ordinary functions.
                                                               (line 20)
* Function, read-table:                  Public ordinary functions.
                                                               (line  7)
* Function, sqldf:                       Public ordinary functions.
                                                               (line 14)
* Function, sqlite-column-type:          Private ordinary functions.
                                                               (line 27)
* Function, statement-column-type:       Private ordinary functions.
                                                               (line 35)
* Function, to-sql-name:                 Private ordinary functions.
                                                               (line 41)
* Function, write-table:                 Public ordinary functions.
                                                               (line 32)
* read-table:                            Public ordinary functions.
                                                               (line  6)
* sqldf:                                 Public ordinary functions.
                                                               (line 13)
* sqlite-column-type:                    Private ordinary functions.
                                                               (line 26)
* statement-column-type:                 Private ordinary functions.
                                                               (line 34)
* to-sql-name:                           Private ordinary functions.
                                                               (line 40)
* write-table:                           Public ordinary functions.
                                                               (line 31)


File: sqldf.info,  Node: Variable index,  Next: Data type index,  Prev: Function index,  Up: Indexes

A.3 Variables
=============

 [index ]
* Menu:

* *downcase-symbols*:                    Private special variables.
                                                               (line  6)
* *escape-sql-names-p*:                  Private special variables.
                                                               (line 11)
* *sqlite-reserved-words*:               Private special variables.
                                                               (line 16)
* Special Variable, *downcase-symbols*:  Private special variables.
                                                               (line  7)
* Special Variable, *escape-sql-names-p*: Private special variables.
                                                               (line 12)
* Special Variable, *sqlite-reserved-words*: Private special variables.
                                                               (line 17)


File: sqldf.info,  Node: Data type index,  Prev: Variable index,  Up: Indexes

A.4 Data types
==============

 [index ]
* Menu:

* File, pkgdcl.lisp:                     The sqldf/pkgdcl․lisp file.
                                                                (line 6)
* File, sqldf.asd:                       The sqldf/sqldf․asd file.
                                                                (line 6)
* File, sqldf.lisp:                      The sqldf/sqldf․lisp file.
                                                                (line 6)
* File, utils.lisp:                      The sqldf/utils․lisp file.
                                                                (line 6)
* Package, sqldf:                        The sqldf package.     (line 6)
* pkgdcl.lisp:                           The sqldf/pkgdcl․lisp file.
                                                                (line 6)
* sqldf:                                 The sqldf system.      (line 6)
* sqldf <1>:                             The sqldf package.     (line 6)
* sqldf.asd:                             The sqldf/sqldf․asd file.
                                                                (line 6)
* sqldf.lisp:                            The sqldf/sqldf․lisp file.
                                                                (line 6)
* System, sqldf:                         The sqldf system.      (line 6)
* utils.lisp:                            The sqldf/utils․lisp file.
                                                                (line 6)



Tag Table:
Node: Top905
Node: Copying2111
Node: Systems2290
Node: The sqldf system2488
Ref: ❨1❩2584
Node: Files3464
Node: Lisp files3672
Node: The sqldf/sqldf․asd file3894
Ref: ❨2❩4067
Node: The sqldf/pkgdcl․lisp file4206
Ref: ❨3❩4400
Node: The sqldf/utils․lisp file4535
Ref: ❨4❩4728
Node: The sqldf/sqldf․lisp file5392
Ref: ❨5❩5548
Node: Packages5928
Node: The sqldf package6106
Ref: ❨6❩6205
Node: Definitions7069
Node: Public Interface7320
Node: Public ordinary functions7504
Ref: ❨7❩7693
Ref: ❨8❩7942
Ref: ❨9❩8941
Node: Internals9156
Node: Private special variables9337
Ref: ❨15❩9550
Ref: ❨18❩9691
Ref: ❨17❩9835
Node: Private ordinary functions9934
Ref: ❨14❩10134
Ref: ❨13❩10497
Ref: ❨12❩10629
Ref: ❨16❩10860
Ref: ❨10❩11180
Ref: ❨11❩11368
Node: Indexes12184
Node: Concept index12375
Node: Function index12497
Node: Variable index15200
Node: Data type index16206

End Tag Table


Local Variables:
coding: utf-8
End:
